# required environment variables:
# - CC_TEST_REPORTER_ID
# dist: xenial
language: ruby
rvm:
  - 2.5.1 # Will need to occassionally bump this
services:
  - postgresql
  # - xvfb
addons:
  chrome: stable
#   apt:
#     packages:
#       - chromium-chromedriver
cache:
  bundler: true
  yarn: true
  directories:
    - node_modules
before_install:
  - curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./cc-test-reporter
  - chmod +x ./cc-test-reporter
  - ./cc-test-reporter before-build
  - nvm install v12.16.3 # Will need to occassionally bump this
  - google-chrome-stable --headless --disable-gpu --remote-debugging-port=9222 http://localhost & # start your web application and listen on `localhost`
install:
  - bundle install --without production --path=${BUNDLE_PATH:-vendor/bundle}
  - yarn install
before_script:
  - cp config/database.yml.travis config/database.yml
  - bundle exec rails db:create
  - bundle exec rails db:migrate
script:
  - bundle exec rspec
  - yarn test
after_script:
  - ./cc-test-reporter format-coverage -t simplecov -o coverage/codeclimate.backend.json coverage/backend/.resultset.json # Format backend coverage
  - ./cc-test-reporter format-coverage -t lcov -o coverage/codeclimate.frontend.json coverage/frontend/lcov.info  # Format frontend coverage
  - ./cc-test-reporter sum-coverage coverage/codeclimate.*.json -p 2                  # Sum both coverage parts into coverage/codeclimate.json
  - if [[ "$TRAVIS_TEST_RESULT" == 0 ]]; then ./cc-test-reporter upload-coverage; fi  # Upload coverage/codeclimate.json